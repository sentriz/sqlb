env GOPACKAGE=task
env GOFILE=task.go
exec sqlb Task User

cmp task.gen.exp.go task.gen.go

-- task.go --
package task

type Task struct {
	ID int
	Name string "random tag"
	Age  int
	UserID string
}

type User struct {
	ID, Name string
}

type NotMentioned struct {
	ID string
	Other int
}

-- task.gen.exp.go --
// Code generated by "sqlb Task User"; DO NOT EDIT.

package task

import "database/sql"

func (Task) PrimaryKey() string {
	return "id"
}

func (t Task) Values() []sql.NamedArg {
	return []sql.NamedArg{sql.Named("id", t.ID), sql.Named("name", t.Name), sql.Named("age", t.Age), sql.Named("user_id", t.UserID)}
}

func (t *Task) ScanFrom(rows *sql.Rows) error {
	return rows.Scan(&t.ID, &t.Name, &t.Age, &t.UserID)
}

func (User) PrimaryKey() string {
	return "id"
}

func (u User) Values() []sql.NamedArg {
	return []sql.NamedArg{sql.Named("id", u.ID), sql.Named("name", u.Name)}
}

func (u *User) ScanFrom(rows *sql.Rows) error {
	return rows.Scan(&u.ID, &u.Name)
}
